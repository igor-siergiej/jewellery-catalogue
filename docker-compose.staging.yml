services:
  jewellery-catalogue-staging-minio:
    image: "minio/minio:RELEASE.2025-04-22T22-12-26Z-cpuv1"
    container_name: jewellery-catalogue-staging-minio 
    ports:
      - "8070:9000"
      - "8071:9001"
    command: [ "server", "--console-address", ":9001", "/data/minio" ]
    env_file:
    - .env.staging
    volumes:
      - jewellery-catalogue-staging-minio-data:/data/minio
    labels:
      logging_job: "jewellery-catalogue-staging-minio"
      logging_stack: "jewellery-catalogue-staging"
    networks:
      - staging-internal

  jewellery-catalogue-staging-mongodb:
    image: mongodb/mongodb-community-server
    container_name: jewellery-catalogue-staging-mongodb
    ports:
      - '28020:27017'
    volumes:
      - jewellery-catalogue-staging-mongo-data:/data/db
    labels:
      logging_job: "jewellery-catalogue-staging-mongodb"
      logging_stack: "jewellery-catalogue-staging"
    networks:
      - staging-internal

  jewellery-catalogue-staging-auth-mongodb:
    image: mongodb/mongodb-community-server
    container_name: jewellery-catalogue-staging-auth-mongodb
    ports:
      - '28021:27017'
    volumes:
      - jewellery-catalogue-staging-auth-mongo-data:/data/db
    labels:
      logging_job: "jewellery-catalogue-staging-auth-mongodb"
      logging_stack: "jewellery-catalogue-staging"
    networks:
      - staging-internal

  jewellery-catalogue-staging-api:
    container_name: jewellery-catalogue-staging-api
    build:
      context: .
      dockerfile: packages/api/Dockerfile
    env_file:
      - .env.staging
    ports:
      - '5001:5001'
    depends_on:
      - jewellery-catalogue-staging-mongodb
      - jewellery-catalogue-staging-minio
    labels:
      logging_job: "jewellery-catalogue-staging-api"
      logging_stack: "jewellery-catalogue-staging"
    volumes:
      - jewellery-catalogue-staging-api-data:/data
    networks:
      - staging-internal
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  jewellery-catalogue-staging-auth:
    container_name: jewellery-catalogue-staging-auth
    build:
      context: .
      dockerfile: packages/auth/Dockerfile
    env_file:
      - .env.staging
    ports:
      - '5002:5002'
    depends_on:
      - jewellery-catalogue-staging-auth-mongodb
    labels:
      logging_job: "jewellery-catalogue-staging-auth"
      logging_stack: "jewellery-catalogue-staging"
    volumes:
      - jewellery-catalogue-staging-auth-data:/data
    networks:
      - staging-internal
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5002"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  jewellery-catalogue-staging-web:
    build:
      context: .
      dockerfile: packages/web/Dockerfile
      args:
         VITE_API_URL: ${VITE_API_URL}
         VITE_AUTH_URL: ${VITE_AUTH_URL}
    container_name: jewellery-catalogue-staging-web 
    env_file:
    - .env.staging
    ports:
      - '8082:80'
    depends_on:
      - jewellery-catalogue-staging-api
      - jewellery-catalogue-staging-auth
    networks:
      - staging-internal
    labels:
      logging_job: "jewellery-catalogue-staging-web"
      logging_stack: "jewellery-catalogue-staging"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  staging-internal:
    driver: bridge

volumes:
  jewellery-catalogue-staging-mongo-data:
  jewellery-catalogue-staging-auth-mongo-data:
  jewellery-catalogue-staging-minio-data:
  jewellery-catalogue-staging-api-data:
  jewellery-catalogue-staging-auth-data: 